upstream GithubDownload {
    server github.com:443;
    keepalive 32;
}

server {
    include snippets/ssl.conf;
    server_name download.fgit.cf;
    root /var/www/fastgit;
    index index.html;

    error_page 497  https://$host$request_uri;
    
    include snippets/universal-headers.conf;
    include snippets/acme-path.conf;
    include snippets/denylist.conf;
    include snippets/nobuffer.conf;
    location / {
        return 404;
    }
    
    location ~ ^/[^/]+/[^/]+/releases(/latest)?/download/ {
        add_header X-Cache $upstream_cache_status;
        proxy_cache fgit-cache;
        proxy_cache_valid 206 120m;
        proxy_cache_valid 200 120m;
        # include snippets/cache.conf;
        recursive_error_pages on;
        proxy_pass https://GithubDownload;
        proxy_intercept_errors on;
        error_page 301 302 307 = @handle_redirect;
    }
    
    location ~ ^/[^/]+/[^/]+/suites/[^/]+/artifacts/ {
        add_header X-Cache $upstream_cache_status;
        proxy_cache fgit-cache;
        proxy_cache_valid 206 120m;
        proxy_cache_valid 200 120m;
        # include snippets/cache.conf;
        recursive_error_pages on;
        proxy_pass https://GithubDownload;
        proxy_intercept_errors on;
        error_page 301 302 307 = @handle_redirect;
    }
    
    location ~ ^/[^/]+/[^/]+/archive/ {
        return 301 https://archive.fgit.cf$request_uri;
    }

    location @handle_redirect {
        resolver 8.8.8.8;
        recursive_error_pages on;
        set $saved_redirect_location '$upstream_http_location';
        # # Check if the location is relative
        # if ($saved_redirect_location ~* ^/[^/].*$) {
        #     # Set the full redirect location using the requested URI
        #     set $saved_redirect_location 'https://github.com$request_uri$saved_redirect_location';
        # }
        proxy_pass $saved_redirect_location;
        proxy_intercept_errors on;
        error_page 301 302 307 = @handle_redirect;
    }
    
    # Block search engine
    include snippets/block-bot.conf;

    include snippets/log.conf;
}
